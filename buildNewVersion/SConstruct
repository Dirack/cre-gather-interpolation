#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# SConstruct  (Madagascar Script)
#
# Purpose: Common Reflection Element (CRE) stack applied to a seismic data cube
# from Kirchhoff Newton modeling of a multi layer velocity model.
#
# IMPORTANT! Use this experiment with vfsa 1.1.2 version.
#
# Site: https://dirack.github.io
# 
# Version 2.0
#
# Programer: Rodolfo A. C. Neves (Dirack) 24/01/2021
#
# Email: rodolfo_profissional@hotmail.com
#
# License: GPL-3.0 <https://www.gnu.org/licenses/gpl-3.0.txt>.

# Madagascar package
from rsf.proj import *

# CRE Gather Stack Recipe
from creGatherStack import creGatherStack

# It uses Very Fast Simulated Aneeling and non hyperbolic CRS
# to get zero offset CRS parameters (RN, RNIP and BETA) from data cube
stackedSection='stackedSection'
parametersCube='parametersCube'
inputDir= '../../modelingAndPEFInterpolation/multiLayerModel/'
dataCube=inputDir+'multiLayerDataCube.rsf'
interpolatedDataCube=inputDir+'interpolatedDataCube2.rsf'

# Parameters
v0 = float(ARGUMENTS.get('v0',1.5))
ot0 = float(ARGUMENTS.get('ot0',0.3))
dt0 = float(ARGUMENTS.get('dt0',0.008))
nt0 = int(ARGUMENTS.get('nt0',331))
om0 = float(ARGUMENTS.get('om0',2))
dm0 = float(ARGUMENTS.get('dm0',0.25))
nm0 = int(ARGUMENTS.get('nm0',8))
aperture = int(ARGUMENTS.get('aperture',1))
cds = bool(ARGUMENTS.get('cds',False))

creGatherStack(
	stackedSection,
	parametersCube,
	dataCube,
	interpolatedDataCube,
	aperture,
	cds,
	nm0,
	om0,
	dm0,
	nt0,
	ot0,
	dt0,
	v0
	)

# Bandpass filter applied to CRE stacked section
Flow('filtStackedSection',stackedSection,
	'''
	bandpass fhi=20 --out=stdout
	''')

# Cut only RNIP vector from parameters cube
Flow('rnip',parametersCube,
	'''
	window n1=1 f1=1
	''')

# Estimate VRMS from RNIP using multifocus formula
Flow('vrms','rnip',
	'''
	rnip2vrms verb=y
	''')

End()
